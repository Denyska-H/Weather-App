/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// ********* VARIABLES *********\r\nconst preloader = document.querySelector('.preloader');\r\nconst cities = document.querySelectorAll('.cities__city');\r\nconst input = document.querySelector('.panel__search');\r\nconst searchBtn = document.querySelector('.panel__submit');\r\nconst wrapper = document.querySelector('.wrapper');\r\n\r\nconst temp = document.querySelector('.weather-app__temp'),\r\n\tlocation = document.querySelector('.weather-app__name'),\r\n\tcondition = document.querySelector('.weather__condition'),\r\n\ttime = document.querySelector('.weather-app__time'),\r\n\tdate = document.querySelector('.weather-app__date'),\r\n\ticon = document.querySelector('.weather__icon');\r\n\r\nconst cloudy = document.querySelector('.details__cloud'),\r\n\thumidity = document.querySelector('.details__humidity'),\r\n\twind = document.querySelector('.details__wind');\r\n\r\n\r\n// Editable value\r\nlet cityInput = `Kiev`;\r\n\r\n// ********* FUNCTIONS *********\r\n// It loads app\r\nconst loadApp = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch(`https://api.weatherapi.com/v1/forecast.json?key=0625d3d688f646f5841162138221105&q=${cityInput}&days=1&aqi=no&alerts=no`);\r\n\t\tconst data = await response.json();\r\n\t\tforecast(data);\r\n\t} catch (error) {\r\n\t\talert(`Can't find appropriate city, try again!`)\r\n\t\twrapper.style.opacity = 1;\r\n\t}\r\n}\r\n\r\n// Search city\r\nconst searchCity = () => {\r\n\tcities.forEach((city) => {\r\n\t\tcity.addEventListener('click', (item) => {\r\n\t\t\tcityInput = item.currentTarget.innerHTML;\r\n\t\t\tloadApp();\r\n\t\t\twrapper.style.opacity = 0;\r\n\t\t})\r\n\t})\r\n}\r\n\r\n// Preloader func\r\nconst loadPreloader = () => {\r\n\tpreloader.classList.add('hide-preloader');\r\n}\r\n\r\n// Back to default\r\nconst setBackToDefault = () => {\r\n\tinput.value = \"\";\r\n}\r\n\r\n// Search func\r\nconst getCurrentCity = (e) => {\r\n\te.preventDefault();\r\n\tconst element = e.currentTarget.previousElementSibling;\r\n\tconst desiredCity = element.value;\r\n\tcityInput = desiredCity;\r\n\tloadApp();\r\n\tsetBackToDefault();\r\n}\r\n\r\n// Day of the week\r\nconst dayOfTheWeek = (month, day, year) => {\r\n\tconst weekday = [\r\n\t\t\"Sunday\",\r\n\t\t\"Monday\",\r\n\t\t\"Tuesday\",\r\n\t\t\"Wednesday\",\r\n\t\t\"Thursday\",\r\n\t\t\"Friday\",\r\n\t\t\"Saturday\"\r\n\t];\r\n\r\n\treturn weekday[new Date(`${month}/${day}/${year}`).getDay()];\r\n}\r\n\r\n// Show forecast\r\nconst forecast = (data) => {\r\n\t// weather forecast\r\n\ttemp.innerHTML = `${data.current.temp_c}&#176`;\r\n\tlocation.innerHTML = data.location.name;\r\n\tcondition.innerHTML = data.current.condition.text;\r\n\r\n\t// panel\r\n\tcloudy.innerHTML = `${data.current.cloud}%`;\r\n\thumidity.innerHTML = `${data.current.humidity}%`;\r\n\twind.innerHTML = `${data.current.wind_kph} km/h`;\r\n\r\n\t// date\r\n\tconst currentDate = data.location.localtime,\r\n\t\ty = parseInt(currentDate.substr(0, 4)),\r\n\t\tm = parseInt(currentDate.substr(5, 2)),\r\n\t\td = parseInt(currentDate.substr(8, 2)),\r\n\t\tcurrentTime = currentDate.substr(11);\r\n\r\n\tdate.innerHTML = `${dayOfTheWeek(m, d, y)} ${d}, ${m} ${y}`;\r\n\ttime.innerHTML = currentTime;\r\n\r\n\t// icons\r\n\tconst iconId = data.current.condition.icon.substr(\"//cdn.weatherapi.com/weather/64x64/\".length);\r\n\ticon.src = `img/icons/${iconId}`;\r\n\r\n\t// background\r\n\tconst code = data.current.condition.code;\r\n\r\n\tlet timeOfDay = 'day';\r\n\r\n\tif (!data.current.is_day) {\r\n\t\ttimeOfDay = 'night';\r\n\t}\r\n\r\n\t// Clear weather\r\n\tif (code === 1000) {\r\n\t\twrapper.style.backgroundImage = `url(./img/${timeOfDay}/clear.jpg)`;\r\n\r\n\t\tsearchBtn.style.background = \"#e5ba92\";\r\n\t\tif (timeOfDay === 'night') {\r\n\t\t\tsearchBtn.style.background = \"#1E2950\";\r\n\t\t}\r\n\t}\r\n\r\n\t// Cloudy weather\r\n\telse if (\r\n\t\tcode === 1003 ||\r\n\t\tcode === 1006 ||\r\n\t\tcode === 1009 ||\r\n\t\tcode === 1030 ||\r\n\t\tcode === 1069 ||\r\n\t\tcode === 1087 ||\r\n\t\tcode === 1135 ||\r\n\t\tcode === 1273 ||\r\n\t\tcode === 1276 ||\r\n\t\tcode === 1279 ||\r\n\t\tcode === 1282\r\n\t) {\r\n\t\twrapper.style.backgroundImage = `url(./img/${timeOfDay}/cloudy.jpg)`;\r\n\t\tsearchBtn.style.background = \"#fa6d1b\";\r\n\t\tif (timeOfDay === 'night') {\r\n\t\t\tsearchBtn.style.background = \"#181e27\";\r\n\t\t}\r\n\t}\r\n\r\n\t// Rainy weather\r\n\telse if (\r\n\t\tcode === 1063 ||\r\n\t\tcode === 1069 ||\r\n\t\tcode === 1072 ||\r\n\t\tcode === 1150 ||\r\n\t\tcode === 1153 ||\r\n\t\tcode === 1180 ||\r\n\t\tcode === 1183 ||\r\n\t\tcode === 1186 ||\r\n\t\tcode === 1189 ||\r\n\t\tcode === 1192 ||\r\n\t\tcode === 1195 ||\r\n\t\tcode === 1204 ||\r\n\t\tcode === 1207 ||\r\n\t\tcode === 1240 ||\r\n\t\tcode === 1243 ||\r\n\t\tcode === 1246 ||\r\n\t\tcode === 1249 ||\r\n\t\tcode === 1252\r\n\t) {\r\n\t\twrapper.style.backgroundImage = `url(./img/${timeOfDay}/rainy.jpg)`;\r\n\t\tsearchBtn.style.background = \"#647d75\";\r\n\t\tif (timeOfDay === 'night') {\r\n\t\t\tsearchBtn.style.background = \"#325c80\";\r\n\t\t}\r\n\t}\r\n\r\n\t// Snow\r\n\telse {\r\n\t\twrapper.style.backgroundImage = `url(./img/${timeOfDay}/snowy.jpg)`;\r\n\t\tsearchBtn.style.background = \"#4d72aa\";\r\n\t\tif (timeOfDay === 'night') {\r\n\t\t\tsearchBtn.style.background = \"#1b1b1b\";\r\n\t\t}\r\n\t}\r\n\r\n\twrapper.style.opacity = 1;\r\n}\r\n\r\nsearchCity();\r\nloadApp();\r\n\r\n// ********* EVENT LISTENERS *********\r\nwindow.addEventListener('load', loadPreloader);\r\nsearchBtn.addEventListener('click', getCurrentCity);\n\n//# sourceURL=webpack://gulp-2022/./src/js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/script.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;